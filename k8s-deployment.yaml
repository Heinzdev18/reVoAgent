# reVoAgent Enterprise Kubernetes Deployment
# Production-ready deployment with high availability and scalability

apiVersion: v1
kind: Namespace
metadata:
  name: revoagent
  labels:
    name: revoagent
    environment: production

---
# ConfigMap for application configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: revoagent-config
  namespace: revoagent
data:
  # API Configuration
  API_HOST: "0.0.0.0"
  API_PORT: "8000"
  API_WORKERS: "4"
  
  # AI Model Configuration
  DEEPSEEK_MODEL_PATH: "/models/deepseek-r1"
  LLAMA_MODEL_PATH: "/models/llama-3.1-70b"
  FORCE_LOCAL_MODELS: "true"
  
  # Database Configuration
  REDIS_URL: "redis://redis-service:6379"
  
  # Security Configuration
  JWT_EXPIRY_HOURS: "24"
  MAX_LOGIN_ATTEMPTS: "5"
  RATE_LIMIT_ENABLED: "true"
  
  # Performance Configuration
  ENABLE_CACHING: "true"
  CACHE_TTL: "3600"
  MAX_CONCURRENT_REQUESTS: "100"

---
# Secret for sensitive configuration
apiVersion: v1
kind: Secret
metadata:
  name: revoagent-secrets
  namespace: revoagent
type: Opaque
data:
  # Base64 encoded secrets (replace with actual values)
  JWT_SECRET: "eW91ci1zdXBlci1zZWNyZXQtand0LWtleQ=="
  OPENAI_API_KEY: "c2stcHJvai14eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4"
  ANTHROPIC_API_KEY: "c2stYW50LXh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4"

---
# Redis Deployment for caching and session storage
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: revoagent
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        ports:
        - containerPort: 6379
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "200m"
        volumeMounts:
        - name: redis-data
          mountPath: /data
      volumes:
      - name: redis-data
        emptyDir: {}

---
# Redis Service
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: revoagent
spec:
  selector:
    app: redis
  ports:
  - port: 6379
    targetPort: 6379

---
# reVoAgent API Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: revoagent-api
  namespace: revoagent
  labels:
    app: revoagent-api
    version: v2.0.0
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: revoagent-api
  template:
    metadata:
      labels:
        app: revoagent-api
        version: v2.0.0
    spec:
      containers:
      - name: revoagent-api
        image: revoagent:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
          name: http
        env:
        # Environment variables from ConfigMap
        - name: API_HOST
          valueFrom:
            configMapKeyRef:
              name: revoagent-config
              key: API_HOST
        - name: API_PORT
          valueFrom:
            configMapKeyRef:
              name: revoagent-config
              key: API_PORT
        - name: REDIS_URL
          valueFrom:
            configMapKeyRef:
              name: revoagent-config
              key: REDIS_URL
        - name: FORCE_LOCAL_MODELS
          valueFrom:
            configMapKeyRef:
              name: revoagent-config
              key: FORCE_LOCAL_MODELS
        # Secrets
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: revoagent-secrets
              key: JWT_SECRET
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: revoagent-secrets
              key: OPENAI_API_KEY
        - name: ANTHROPIC_API_KEY
          valueFrom:
            secretKeyRef:
              name: revoagent-secrets
              key: ANTHROPIC_API_KEY
        resources:
          requests:
            memory: "2Gi"
            cpu: "500m"
          limits:
            memory: "4Gi"
            cpu: "2000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: models-storage
          mountPath: /models
          readOnly: true
        - name: temp-storage
          mountPath: /tmp
      volumes:
      - name: models-storage
        persistentVolumeClaim:
          claimName: models-pvc
      - name: temp-storage
        emptyDir: {}
      nodeSelector:
        node-type: compute  # Deploy on compute nodes with GPUs
      tolerations:
      - key: "gpu"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"

---
# Persistent Volume Claim for AI models
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: models-pvc
  namespace: revoagent
spec:
  accessModes:
    - ReadOnlyMany
  resources:
    requests:
      storage: 100Gi
  storageClassName: fast-ssd

---
# Service for reVoAgent API
apiVersion: v1
kind: Service
metadata:
  name: revoagent-api-service
  namespace: revoagent
  labels:
    app: revoagent-api
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 8000
    protocol: TCP
    name: http
  selector:
    app: revoagent-api

---
# Ingress for external access
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: revoagent-ingress
  namespace: revoagent
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    nginx.ingress.kubernetes.io/websocket-services: "revoagent-api-service"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - api.revoagent.com
    secretName: revoagent-tls
  rules:
  - host: api.revoagent.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: revoagent-api-service
            port:
              number: 80

---
# Horizontal Pod Autoscaler
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: revoagent-api-hpa
  namespace: revoagent
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: revoagent-api
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60

---
# Network Policy for security
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: revoagent-network-policy
  namespace: revoagent
spec:
  podSelector:
    matchLabels:
      app: revoagent-api
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    ports:
    - protocol: TCP
      port: 8000
  - from:
    - podSelector:
        matchLabels:
          app: revoagent-api
    ports:
    - protocol: TCP
      port: 8000
  egress:
  - to:
    - podSelector:
        matchLabels:
          app: redis
    ports:
    - protocol: TCP
      port: 6379
  - to: []
    ports:
    - protocol: TCP
      port: 443  # HTTPS for external APIs
    - protocol: TCP
      port: 53   # DNS
    - protocol: UDP
      port: 53   # DNS

---
# ServiceMonitor for Prometheus monitoring
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: revoagent-metrics
  namespace: revoagent
  labels:
    app: revoagent-api
spec:
  selector:
    matchLabels:
      app: revoagent-api
  endpoints:
  - port: http
    path: /metrics
    interval: 30s
    scrapeTimeout: 10s