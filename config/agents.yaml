# Specialized Agent Configuration for Three-Engine Architecture
# reVoAgent Agent Management

# Agent Definitions
agents:
  # ðŸ©· Code Generation Agent - Creative Engine Powered
  code_generator:
    enabled: true
    
    # Engine Configuration
    engine: "creative_engine"
    model: "deepseek-r1"
    
    # Capabilities
    capabilities:
      - code_generation
      - architecture_design
      - pattern_recognition
      - optimization_suggestions
      - documentation_generation
    
    # Tools Integration
    tools:
      - git
      - docker
      - editor
      - linter
      - formatter
    
    # Configuration
    config:
      creativity_level: 0.8
      solution_alternatives: 5
      code_style: "pythonic"
      documentation_level: "comprehensive"
      testing_integration: true
    
    # Performance Settings
    performance:
      max_response_time: "10s"
      max_code_length: 10000
      concurrent_requests: 3
      cache_solutions: true

  # ðŸ”µðŸŸ£ Debugging Agent - Perfect Recall + Parallel Mind
  debugging_agent:
    enabled: true
    
    # Engine Configuration
    engines:
      - perfect_recall
      - parallel_mind
    model: "deepseek-r1"
    
    # Capabilities
    capabilities:
      - error_detection
      - root_cause_analysis
      - fix_suggestions
      - performance_analysis
      - memory_leak_detection
    
    # Tools Integration
    tools:
      - debugger
      - profiler
      - analyzer
      - tracer
      - monitor
    
    # Configuration
    config:
      analysis_depth: "comprehensive"
      parallel_analysis: true
      context_awareness: true
      historical_analysis: true
      fix_confidence_threshold: 0.8
    
    # Performance Settings
    performance:
      max_response_time: "15s"
      parallel_workers: 4
      memory_context_size: "2GB"
      analysis_timeout: "60s"

  # ðŸŸ£ Testing Agent - Parallel Mind Powered
  testing_agent:
    enabled: true
    
    # Engine Configuration
    engine: "parallel_mind"
    model: "llama-3.2"
    
    # Capabilities
    capabilities:
      - test_generation
      - test_execution
      - coverage_analysis
      - performance_testing
      - integration_testing
    
    # Tools Integration
    tools:
      - pytest
      - coverage
      - benchmark
      - selenium
      - locust
    
    # Configuration
    config:
      test_types:
        - unit
        - integration
        - performance
        - security
      coverage_target: 90
      parallel_execution: true
      test_data_generation: true
    
    # Performance Settings
    performance:
      max_response_time: "20s"
      parallel_workers: 8
      test_timeout: "300s"
      concurrent_test_suites: 4

  # ðŸ”µðŸŸ£ðŸ©· Deployment Agent - All Engines Coordination
  deployment_agent:
    enabled: true
    
    # Engine Configuration
    engines:
      - perfect_recall
      - parallel_mind
      - creative_engine
    model: "deepseek-r1"
    
    # Capabilities
    capabilities:
      - deployment_planning
      - infrastructure_setup
      - monitoring_configuration
      - rollback_strategies
      - security_hardening
    
    # Tools Integration
    tools:
      - docker
      - kubernetes
      - terraform
      - ansible
      - monitoring
    
    # Configuration
    config:
      deployment_strategies:
        - blue_green
        - rolling
        - canary
      infrastructure_types:
        - local
        - cloud
        - hybrid
      monitoring_level: "comprehensive"
    
    # Performance Settings
    performance:
      max_response_time: "30s"
      deployment_timeout: "1800s"
      rollback_timeout: "300s"
      health_check_interval: "30s"

  # ðŸ”µ Browser Automation Agent - Perfect Recall Context
  browser_automation:
    enabled: true
    
    # Engine Configuration
    engine: "perfect_recall"
    model: "deepseek-r1"
    
    # Capabilities
    capabilities:
      - web_scraping
      - form_automation
      - ui_testing
      - data_extraction
      - workflow_automation
    
    # Tools Integration
    tools:
      - selenium
      - playwright
      - beautifulsoup
      - requests
      - pandas
    
    # Configuration
    config:
      browser_types:
        - chromium
        - firefox
        - webkit
      headless_mode: true
      context_preservation: true
      session_management: true
    
    # Performance Settings
    performance:
      max_response_time: "60s"
      page_load_timeout: "30s"
      element_wait_timeout: "10s"
      concurrent_browsers: 2

# Agent Coordination
coordination:
  # Inter-agent Communication
  communication:
    enabled: true
    protocol: "message_queue"
    timeout: "30s"
    retry_attempts: 3
  
  # Workflow Management
  workflows:
    enabled: true
    
    # Predefined Workflows
    predefined:
      full_development_cycle:
        agents:
          - code_generator
          - testing_agent
          - debugging_agent
          - deployment_agent
        sequence: "parallel_with_dependencies"
      
      bug_fix_workflow:
        agents:
          - debugging_agent
          - code_generator
          - testing_agent
        sequence: "sequential"
      
      web_automation_workflow:
        agents:
          - browser_automation
          - testing_agent
        sequence: "parallel"
  
  # Task Distribution
  distribution:
    strategy: "capability_based"
    load_balancing: true
    priority_handling: true
    deadlock_prevention: true

# Agent Management
management:
  # Lifecycle Management
  lifecycle:
    auto_start: true
    health_monitoring: true
    auto_restart: true
    graceful_shutdown: true
  
  # Resource Management
  resources:
    memory_limits:
      code_generator: "2GB"
      debugging_agent: "4GB"
      testing_agent: "3GB"
      deployment_agent: "2GB"
      browser_automation: "1GB"
    
    cpu_limits:
      code_generator: "50%"
      debugging_agent: "70%"
      testing_agent: "80%"
      deployment_agent: "60%"
      browser_automation: "40%"
  
  # Configuration Management
  configuration:
    hot_reload: true
    version_control: true
    rollback_support: true
    validation: true

# Security Configuration
security:
  # Agent Isolation
  isolation:
    enabled: true
    sandbox_mode: true
    network_isolation: false
    file_system_limits: true
  
  # Access Control
  access_control:
    authentication: true
    authorization: true
    role_based_access: true
    audit_logging: true
  
  # Tool Security
  tool_security:
    whitelist_tools: true
    sandbox_tool_execution: true
    monitor_tool_usage: true
    limit_tool_permissions: true

# Monitoring and Logging
monitoring:
  # Performance Monitoring
  performance:
    enabled: true
    metrics:
      - response_time
      - success_rate
      - resource_usage
      - error_rate
    
    # Alerting
    alerting:
      enabled: true
      thresholds:
        response_time: "30s"
        error_rate: "5%"
        memory_usage: "90%"
  
  # Logging Configuration
  logging:
    level: "INFO"
    format: "structured"
    rotation: "daily"
    retention: "30d"
    
    # Log Categories
    categories:
      - agent_lifecycle
      - task_execution
      - error_handling
      - performance_metrics
      - security_events

# Integration Configuration
integrations:
  # External Services
  external_services:
    github:
      enabled: true
      api_token_env: "GITHUB_TOKEN"
      rate_limiting: true
    
    docker_hub:
      enabled: true
      credentials_env: "DOCKER_CREDENTIALS"
      registry_url: "https://registry-1.docker.io"
    
    cloud_providers:
      aws:
        enabled: false
        credentials_env: "AWS_CREDENTIALS"
      
      gcp:
        enabled: false
        credentials_env: "GCP_CREDENTIALS"
      
      azure:
        enabled: false
        credentials_env: "AZURE_CREDENTIALS"
  
  # Development Tools
  development_tools:
    ide_integration:
      vscode: true
      jetbrains: true
      vim: false
    
    version_control:
      git: true
      svn: false
      mercurial: false
    
    ci_cd:
      github_actions: true
      gitlab_ci: false
      jenkins: false