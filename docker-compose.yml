version: '3.8'

services:
  # Backend service
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
      target: production
    container_name: revoagent-backend
    ports:
      - "12001:12001"
    volumes:
      - ./data:/app/data
      - ./models:/app/models
      - ./config:/app/config
      - ./logs:/app/logs
      - ./temp:/app/temp
    environment:
      - REVOAGENT_CONFIG=/app/config/config.yaml
      - PYTHONPATH=/app/src
      - REVOAGENT_MODE=production
    networks:
      - revoagent-network
    restart: unless-stopped
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:12001/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: production
    container_name: revoagent-frontend
    ports:
      - "12000:12000"
    environment:
      - VITE_API_URL=http://backend:12001
      - VITE_WS_URL=ws://backend:12001
      - VITE_APP_MODE=production
    networks:
      - revoagent-network
    restart: unless-stopped
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:12000"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for caching and message queuing
  redis:
    image: redis:7-alpine
    container_name: revoagent-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - revoagent-network
    restart: unless-stopped
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Development environment
  revoagent-dev:
    build:
      context: .
      target: dev
    container_name: revoagent-dev
    ports:
      - "12001:12001"  # Backend port standardized
      - "12000:12000"  # Frontend port standardized
      - "8001:8001"    # Additional services
    volumes:
      - .:/app
      - /var/run/docker.sock:/var/run/docker.sock  # For Docker-in-Docker
    environment:
      - REVOAGENT_CONFIG=/app/config/config.yaml
      - PYTHONPATH=/app/src
      - REVOAGENT_DEBUG=true
    networks:
      - revoagent-network
    depends_on:
      - redis
    profiles:
      - dev
    stdin_open: true
    tty: true

  # Web dashboard (optional)
  dashboard:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: revoagent-dashboard
    ports:
      - "3000:3000"
    environment:
      - VITE_API_URL=http://localhost:12001
      - VITE_WS_URL=ws://localhost:12001
    networks:
      - revoagent-network
    profiles:
      - dashboard
    depends_on:
      - backend

  # Model server for local models (optional)
  model-server:
    image: ghcr.io/ggerganov/llama.cpp:server
    container_name: revoagent-model-server
    ports:
      - "8080:8080"
    volumes:
      - ./models:/models
    command: >
      --model /models/deepseek-coder-6.7b-instruct.gguf
      --host 0.0.0.0
      --port 8080
      --ctx-size 8192
      --threads 4
    networks:
      - revoagent-network
    profiles:
      - models
    restart: unless-stopped

  # Monitoring with Prometheus (optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: revoagent-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    networks:
      - revoagent-network
    profiles:
      - monitoring
    restart: unless-stopped

  # Grafana for dashboards (optional)
  grafana:
    image: grafana/grafana:latest
    container_name: revoagent-grafana
    ports:
      - "3001:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - revoagent-network
    profiles:
      - monitoring
    depends_on:
      - prometheus
    restart: unless-stopped

networks:
  revoagent-network:
    driver: bridge

volumes:
  redis-data:
  prometheus-data:
  grafana-data: